import picamera
import pytesseract
from PIL import Image
import RPi.GPIO as GPIO
import time

# Dictionary of alphanumerics with their corresponding braille characters represented in a 3x2 list of lists
braille_alphanumerics = {
    'a': [[1, 0], [0, 0], [0, 0]], 'b': [[1, 1], [0, 0], [0, 0]], 'c': [[1, 0], [1, 0], [0, 0]],
    'd': [[1, 0], [1, 1], [0, 0]], 'e': [[1, 0], [0, 1], [0, 0]], 'f': [[1, 1], [1, 0], [0, 0]],
    'g': [[1, 1], [1, 1], [0, 0]], 'h': [[1, 0], [0, 1], [1, 0]], 'i': [[1, 1], [0, 1], [0, 0]],
    'j': [[1, 1], [0, 1], [1, 0]], 'k': [[1, 0], [1, 0], [1, 0]], 'l': [[1, 1], [1, 0], [1, 0]],
    'm': [[1, 0], [1, 1], [1, 0]], 'n': [[1, 0], [1, 1], [1, 1]], 'o': [[1, 0], [0, 1], [1, 1]],
    'p': [[1, 1], [1, 1], [1, 0]], 'q': [[1, 1], [1, 1], [1, 1]], 'r': [[1, 0], [1, 0], [1, 1]],
    's': [[1, 1], [0, 0], [1, 1]], 't': [[0, 1], [1, 0], [1, 0]], 'u': [[1, 0], [1, 0], [1, 1]],
    'v': [[1, 1], [1, 0], [1, 1]], 'w': [[0, 1], [1, 1], [0, 1]], 'x': [[1, 1], [1, 0], [1, 0]],
    'y': [[1, 1], [0, 0], [1, 0]], 'z': [[1, 0], [0, 0], [1, 1]],
    '.': [[0, 0], [1, 0], [0, 1]], ',': [[0, 0], [0, 0], [1, 0]], ';': [[0, 0], [1, 0], [1, 0]],
    ':': [[0, 0], [1, 1], [1, 0]], '!': [[0, 1], [1, 0], [0, 1]], '?': [[0, 1], [0, 0], [1, 0]]
}

camera = picamera.PiCamera()  # Initialize the camera
camera.capture('image.jpg')  # Take a picture
image = Image.open('image.jpg')  # Open the image
gray = image.convert('L')  # Convert the image to grayscale
text = pytesseract.image_to_string(gray)  # Run OCR on the image


GPIO.setmode(GPIO.BOARD)  # Set the pin numbering mode
pins = [7, 11, 12, 13, 15, 16]  # Pin numbers for the servo motors

# Set the pins as output
for pin in pins:
    GPIO.setup(pin,GPIO.OUT)
    GPIO.output(pin,GPIO.LOW)

# Initialize the PWM for each pin
servo = [GPIO.PWM(pin, 50) for pin in pins]

# Start the PWM with a duty cycle of 7.5%
for s in servo:
    s.start(7.5)


def braille_representation(char):
    try:
        return braille_alphanumerics[char]
    except KeyError:
        print("Invalid character")


# Set the state of the pins according to the 3x2 list of lists
# representing the Braille representation of a character

def set_braille(braille):
    for i in range(3):
        for j in range(2):
            servo_index = i*2+j
            state = braille[i][j]
            if state == 1:
                servo[servo_index].ChangeDutyCycle(12.5)
            else:
                servo[servo_index].ChangeDutyCycle(7.5)


for c in text:
    braille_text = braille_representation(c)
    # Do something with the braille representation
    set_braille(braille_text)


# Stop the PWM
for s in servo:
    s.stop()

GPIO.cleanup()  # Clean up the GPIO pins
